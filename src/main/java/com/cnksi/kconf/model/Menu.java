package com.cnksi.kconf.model;

import com.cnksi.kcore.jfinal.model.BaseModel;
import com.jfinal.kit.StrKit;
import com.jfinal.plugin.activerecord.Db;

import java.util.ArrayList;
import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Menu extends BaseModel<Menu> {

	public static final Menu me = new Menu();

	@SuppressWarnings("rawtypes")
	@Override
	protected Class getCls() {
		return this.getClass();
	}

	/**
	 * 根据RoleID查询用户的菜单
	 * 
	 * @param roleid
	 * @return
	 */
	public List<Menu> findByRole(Long roleid) {
		String sql = "select m.* from k_menu m left join k_role_menu rm on m.menuid = rm.menuid where rm.enabled = 0 and m.enabled = 0 and rm.role_id = ? order by m.pmenuid,m.ord";
		return find(sql, roleid);
	}

	public List<Menu> findChildMenuByRole(String pmenuid, Long roleid) {
		String sql = "SELECT  m.* FROM `k_menu` m LEFT JOIN k_role_menu rm on rm.menuid = m.menuid WHERE  m.type='child' and pmenuid = ? and rm.enabled = 0 and  rm.role_id =? and m.enabled=0 order by m.ord ";
		return find(sql.toString(), pmenuid, roleid);
	}

	public List<Menu> findMenu(String type, String pmenuid) {
		StringBuilder sb = new StringBuilder();
		List<String> params = new ArrayList<>();
		sb.append("select * from %s where 1=1");
		sb.append(" and type = ?");
		params.add(type);
		if (StrKit.notBlank(pmenuid)) {
			sb.append(" and pmenuid=? ");
			params.add(pmenuid);
		}
		sb.append(" and enabled=0 order by ord asc ");
		return find(String.format(sb.toString(), tableName), params.toArray());
	}

	public List<Menu> findModuleMenu() {
		return findMenu("module", null);
	}

	public List<Menu> findParentMenu() {
		return findMenu("parent", null);
	}

	/**
	 * 查询当前资源的子集菜单
	 *
	 * tips:该方法在jsp页面被调用
	 * @return
	 */
	public List<Menu> findChildMenu() {
		return findMenu("child", this.get("menuid"));
	}

	/**
	 * 根据父级菜单id删除所有子级菜单
	 *
	 * @param pid
	 */

	public void delChildMenu(String pid) {
		String sql = String.format("update %s set enabled = 1 where pmenuid = ? ", tableName);

		Db.update(sql, pid);
	}

	public void insertMenu(String mname, String murl) {
		Menu menu = Menu.me.findByPropertity("murl", murl);
		if (menu != null) {
			menu.set("mname", mname);
			menu.update();
		} else {
			menu = new Menu();
			menu.set("mname", mname);
			String menuid = murl.substring(murl.lastIndexOf("/")).replace("/", "");
			Menu tmp = Menu.me.findById(menuid);
			if (tmp != null) return;
			menu.set("menuid", menuid);
			menu.set("pmenuid", "syssetting");
			menu.set("murl", murl);
			menu.set("enabled", 0);
			menu.save();
		}
	}

	/**
	 * 根据角色查询Module
	 * @param roleid
	 * @return
	 */
	public List<Menu> findModuleMenuByRole(Long roleid) {
		String sql = "select * from k_menu  where enabled=0 and type='module' and  menuid in (select menuid from k_role_menu where role_id =? and enabled=0) order by ord ";
		return find(sql, roleid);
	}
}
